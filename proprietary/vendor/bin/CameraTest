#!/system/bin/sh
#########################################################################
#									#
#		ASUS ATD TestCommand Interface for Camera		#
#									#
#########################################################################

TEST_TIMES=-1
INDEX=0
COUNT=75
OPEN_COUNT=80
FOCUS_COUNT=100
REC=1
LOG_FILE="/data/.tmp/CameraTest.log"
DATA_PATH="/sdcard/"

function disableTouch(){ 
#    echo "Disable touch!!"
    echo a503 > /sys/bus/i2c/devices/3-0038/ftstprwreg # for A91_SR1
}

function enableTouch(){ 
#    echo "Enable touch!!"
    echo 1 > /sys/bus/i2c/devices/3-0038/ftresetic # for A91_SR1
}

#Debug message switch
DEBUG=0

logi () {
  echo "`date` I $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` I $@"
  fi
}

logd () {
  echo "`date` D $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` D $@"
  fi
}

loge () {
  echo "`date` E $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` E $@"
  fi
}

#log success/fail message and show processing result on the consol
#$1:success/fail  $2:return string
my_exit() {
  if [ "$1" == "success" ]
  then
    logi "<== return success(1)"
    ATD_ret="1"
    ret=0
  else
    loge "<### return fail(0)"
    ATD_ret="0"
    ret=1
  fi

  echo $ATD_ret
  exit $ret
}

calibration(){
#	sh /system/bin/dit_cali $1 >> $LOG_FILE
	sh /system/bin/dit_cali $1
	if [ "$1" == "0" ]; then
		result=`cat /data/data/cal_rear_result.txt 2> /dev/null`
	else
		result=`cat /data/data/cal_front_result.txt 2> /dev/null`
	fi
	if [ "$result" == "1" ]; then
		my_exit success
	else
		my_exit fail
	fi
}

get_golden_data(){
#	sh /system/bin/dit_golden $1 >> $LOG_FILE
	sh /system/bin/dit_cali_golden $1
	if [ "$1" == "0" ]; then
		result=`cat /data/data/cal_golden_rear_result.txt 2> /dev/null`
	else
		result=`cat /data/data/cal_golden_front_result.txt 2> /dev/null`
	fi
	if [ "$result" == "1" ]; then
		my_exit success
	else
		my_exit fail
	fi
}

af_calibration(){
#	sh /system/bin/dit_cali $1 >> $LOG_FILE
	sh /system/bin/dit_af_cali $1 $2 $3
	if [ "$1" == "0" ]; then
		result=`cat /data/data/cal_af_rear_result.txt 2> /dev/null`
	else
		result=`cat /data/data/cal_af_front_result.txt 2> /dev/null`
	fi
	if [ "$result" == "1" ]; then
		my_exit success
	else
		my_exit fail
	fi
}

setkeycode(){
	echo "type= user" > /data/.tmp/keycode.script
	echo "count= 1" >> /data/.tmp/keycode.script
	echo "speed= 1.0" >> /data/.tmp/keycode.script
	echo "start data >>" >> /data/.tmp/keycode.script
	echo "DispatchPress("$1")" >> /data/.tmp/keycode.script
	chmod 777 /data/.tmp/keycode.script 2> /dev/null
	sleep 0.2
	monkey -f /data/.tmp/keycode.script --ignore-crashes --ignore-timeouts --ignore-security-exceptions --monitor-native-crashes --ignore-native-crashes -v 1 --port 321 > /dev/null
}

case $1 in
	"0")
		case $2 in
		"0")
		enableTouch;
			#echo "Preparing to close camera(Back camera)...!"
			log -p d -t Camera "CameraTest close back camera +++"
			while [ $INDEX -lt $3 ]
			do
				setkeycode 3
				#if [ -s /data/.tmp/ATD_START ];
				#then
				#date '+%M:%S'
				sleep 0.2
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "0" ]; then
					#echo "Close camera success!!"
					#setprop com.asus.disableevent 0
					# echo "Enable touch success!!"
					#echo 0 > /data/.tmp/ATD_INFINITY
					#echo "Cancel focus setting!!"
					#rm /data/.tmp/ATD_START    2> /dev/null
					echo "1"				
					log -p d -t Camera "CameraTest close back camera ---"
					exit 0
				fi
				#else
					#echo "0"				
					#log -p d -t Camera "CameraTest close back camera before open ---"
					#exit 0
				#fi
			done
			#echo "Close camera failed!!"
			log -p e -t Camera "CameraTest close back camera failed ---"
			echo "0"
		;;
		"1")
		disableTouch;
			#echo "Preparing to open camera(Back camera)...!"
            log -p d -t Camera "CameraTest open back camera +++"
			rm /data/.tmp/ATD_START    2> /dev/null
            rm /data/.tmp/ATD_FILE     2> /dev/null
            rm /data/.tmp/ATD_PICTURE  2> /dev/null
			rm /data/.tmp/ATD_INFINITY 2> /dev/null
			rm /data/.tmp/ATD_FOCUSDONE 2> /dev/null
			#date '+%M:%S'
			sh /system/bin/am force-stop org.codeaurora.snapcam # fix resume mode back keyevent not usable
			sh /system/bin/am start -n org.codeaurora.snapcam/com.android.camera.CameraLauncher -e commandID 0 >> /dev/null
			sleep 0.1
			INDEX=$(($INDEX+1))
			result=`cat /data/.tmp/ATD_START 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				#sleep 0.3
				echo "1"
				log -p d -t Camera "CameraTest open back camera 1 ---"
				#date '+%M:%S'
				exit 0
			fi
			while [ $INDEX -lt $OPEN_COUNT ]
 			do
			if [ "$INDEX % 20" -eq "0" ]; then
				sh /system/bin/am force-stop org.codeaurora.snapcam # fix resume mode back keyevent not usable
				sh /system/bin/am start -n org.codeaurora.snapcam/com.android.camera.CameraLauncher -e commandID 0 >> /dev/null
			fi
			sleep 0.1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "$REC" ]; then
					#echo "Start preview success!!"
					#setprop com.asus.disableevent 1
					# echo "Disable touch success!!"
					#setprop camera.infinity.set 0
					#sleep 0.3
					echo "1"
					log -p d -t Camera "CameraTest open back camera 2 ---"
					#date '+%M:%S'
					exit 0
				fi
				#sleep 1
			done
			#echo "Start preview failed!!"
			log -p e -t Camera "CameraTest open back camera failed"
			echo "0"
		;;
		*)
			echo "Invalid argument!!(par2 : onoffID = $2)"
		;;
		esac
	;;
	"1")
		case $2 in
		"0")
		enableTouch;
			#echo "Preparing to close camera(Front camera)...!"
			log -p d -t Camera "CameraTest close front camera +++"
			while [ $INDEX -lt $3 ]
			do
				setkeycode 3
				#if [ -s /data/.tmp/ATD_START ];
				#then
				#date '+%M:%S'
				sleep 0.2
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "0" ]; then
					#echo "Close camera success!!"
					#setprop com.asus.disableevent 0
					# echo "Enable touch success!!"
					#rm /data/.tmp/ATD_START    2> /dev/null
					echo "1"					
					log -p d -t Camera "CameraTest close front camera ---"
					exit
				fi
				#else
					#echo "0"					
					#log -p d -t Camera "CameraTest close front camera before open ---"
					#exit
				#fi
			done
			#echo "Close camera failed!!"
			log -p e -t Camera "CameraTest close front camera failed ---"
			echo "0"
		;;
		"1")
		disableTouch;
			#echo "Preparing to open camera(Front camera)...!"
			log -p d -t Camera "CameraTest open front camera +++"
			rm /data/.tmp/ATD_START    2> /dev/null
            rm /data/.tmp/ATD_FILE     2> /dev/null
            rm /data/.tmp/ATD_PICTURE  2> /dev/null
			rm /data/.tmp/ATD_INFINITY 2> /dev/null
			rm /data/.tmp/ATD_FOCUSDONE 2> /dev/null
			#date '+%M:%S'
			sh /system/bin/am force-stop org.codeaurora.snapcam # fix resume mode back keyevent not usable
			sh /system/bin/am start -n org.codeaurora.snapcam/com.android.camera.CameraLauncher -e commandID 1 >> /dev/null
			sleep 0.1
			INDEX=$(($INDEX+1))
			result=`cat /data/.tmp/ATD_START 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				#sleep 0.3
				echo "1"
				log -p d -t Camera "CameraTest open front camera 1 ---"
				#date '+%M:%S'
				exit
			fi
			while [ $INDEX -lt $OPEN_COUNT ]
			do
			if [ "$INDEX % 20" -eq "0" ]; then
				sh /system/bin/am force-stop org.codeaurora.snapcam # fix resume mode back keyevent not usable
				sh /system/bin/am start -n org.codeaurora.snapcam/com.android.camera.CameraLauncher -e commandID 1 >> /dev/null
			fi
			sleep 0.1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "$REC" ]; then
					#echo "Start preview success!!"
					#setprop com.asus.disableevent 1
					# echo "Disable touch success!!"
					#sleep 0.3
					echo "1"
					log -p d -t Camera "CameraTest open front camera 2 ---"
					#date '+%M:%S'
					exit
				fi
				#sleep 1
			done
			#echo "Start preview failed!!"
			log -p e -t Camera "CameraTest open front camera failed"
			echo "0"
		;;
		*)
			echo "Invalid argument!!(par2 : onoffID = $2)"
		;;
		esac
	;;
	"2")
		# echo "Preparing to auto focus & take picture...!"
		log -p d -t Camera "CameraTest auto focus & take picture +++"
    	#echo $2 > /data/.tmp/ATD_FILE
    	rm -rf $DATA_PATH$2".jpg" 2> /dev/null
    	echo 0 > /data/.tmp/ATD_PICTURE
		echo 0 > /data/.tmp/ATD_INFINITY
		echo 0 > /data/.tmp/ATD_FILE
		#date '+%M:%S'
		result=`getprop sys.camera.rotation`
		project=`getprop ro.product.model`
		cali_mode=`getprop debug.asus.cameratest.mode`
		case $project in
			#ME372CG
			"K00E")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 640 400
				else
					sh /system/bin/input tap 400 640
				fi
				sleep 4
				setkeycode 27
				;;
			#PF450CL
			"UNKNOWN")
				echo "now in $project Project!"
				if [ $result == '1' ]; then
					sh /system/bin/input tap 400 240
				else
					sh /system/bin/input tap 240 400
				fi
				sleep 2
				setkeycode 27
				;;
			#ME175CG
			"K00Z")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 640 400
				else
					sh /system/bin/input tap 400 640
				fi
				sleep 2
				setkeycode 27
				;;
			#PF400CG
			"ASUS_T00E")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 400 240
				else
					sh /system/bin/input tap 240 400
				fi
				sleep 2
				setkeycode 27
				;;
			#ZE500CL
			"ASUS_Z00D")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 500 360
				else
					sh /system/bin/input tap 360 500
				fi
				#sleep 1
				setkeycode 27
				;;
			#ZE500KL
			"ASUS_Z00ED")
				setkeycode 80
				;;
			*)
				setkeycode 80
				;;
		esac		
		sleep 0.2

		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			#if [ "$INDEX % 41" -eq "0" -a "$cali_mode" == "0" ]; then
			#	setkeycode 80
			#	echo 0 > /data/.tmp/ATD_PICTURE
			#	echo 0 > /data/.tmp/ATD_FILE
			#	sleep 0.2
			#fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
                while [ ! -s $DATA_PATH$2".jpg" ];
                do
					picture_name=`cat /data/.tmp/ATD_FILE 2> /dev/null`
					mv $DATA_PATH$picture_name".jpg" $DATA_PATH$2".jpg"  2> /dev/null
                done
				#echo "Picture taken success!!"
				echo "1"
				log -p d -t Camera "CameraTest auto focus & take picture($picture_name) ---"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		#echo "Picture taken failed!!"
		log -p e -t Camera "CameraTest auto focus & take picture failed"
		echo "0"
	;;

	"3")
        case $2 in
        "0")
		    #echo "Set focus mode!"
		    log -p d -t Camera "CameraTest set auto focus mode & start auto focus +++"
		    #echo $2 > /data/.tmp/ATD_INFINITY
			echo 0 > /data/.tmp/ATD_FOCUSDONE
		    setkeycode 131
		while [ $INDEX -lt $FOCUS_COUNT ]
		do
			INDEX=$(($INDEX+1))
			result=`cat /data/.tmp/ATD_FOCUSDONE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				echo "1"
				log -p d -t Camera "CameraTest set auto focus mode & start auto focus  ---"
				exit
			fi
			sleep 0.1
		done
		echo "0"
		log -p d -t Camera "CameraTest set auto focus mode & start auto focus failed"
	        ;;
        "1")
            log -p d -t Camera "CameraTest set infinity focus mode +++"
            setkeycode 173
            sleep 0.5
            echo "1"
			log -p d -t Camera "CameraTest set infinity focus mode ---"
            ;;
        *)
			log -p d -t Camera "CameraTest set focus mode Invalid argument!!(par2 : commandID = $2)"
			echo "Invalid argument!!(par2 : commandID = $2)"
			exit
            ;;
        esac
    ;;
	"4")
		# echo "Take picture...!"
		log -p d -t Camera "CameraTest take picture +++"
    	#echo $2 > /data/.tmp/ATD_FILE
    	rm -rf $DATA_PATH$2".jpg" 2> /dev/null
    	echo 0 > /data/.tmp/ATD_PICTURE
    	echo 0 > /data/.tmp/ATD_FILE
    	cali_mode=`getprop debug.asus.cameratest.mode`
		
		# sh /system/bin/input keyevent 80
		# sleep 2
		#date '+%M:%S'
		#sh /system/bin/input keyevent 17
		setkeycode 27
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			#if [ "$INDEX % 41" -eq "0" -a "$cali_mode" == "0" ]; then
			#	setkeycode 27
			#	echo 0 > /data/.tmp/ATD_PICTURE
			#	echo 0 > /data/.tmp/ATD_FILE
			#	sleep 0.2
			#fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
                while [ ! -s $DATA_PATH$2".jpg" ];
                do
					picture_name=`cat /data/.tmp/ATD_FILE 2> /dev/null`
					mv $DATA_PATH$picture_name".jpg" $DATA_PATH$2".jpg"  2> /dev/null
                done
				#echo "Picture taken success!!"
				echo "1"
				log -p d -t Camera "CameraTest take picture($picture_name) ---"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		
		#echo "Picture taken failed!!"
		log -p e -t Camera "CameraTest take picture failed"
		echo "0"
	;;

	"5")
        #echo $2 > /data/.tmp/ATDFILE
        log -p d -t Camera "CameraTest take picture +++"
    	rm -rf $DATA_PATH$2".jpg" 2> /dev/null
    	echo 0 > /data/.tmp/ATD_PICTURE
    	echo 0 > /data/.tmp/ATD_FILE
		
		setkeycode 27
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			#if [ "$INDEX % 41" -eq "0" ]; then
			#	setkeycode 27
			#	echo 0 > /data/.tmp/ATD_PICTURE
			#	echo 0 > /data/.tmp/ATD_FILE
			#	sleep 0.2
			#fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
                while [ ! -s $DATA_PATH$2".jpg" ];
                do
					picture_name=`cat /data/.tmp/ATD_FILE 2> /dev/null`
					mv $DATA_PATH$picture_name".jpg" $DATA_PATH$2".jpg"  2> /dev/null
                done
				echo "1"
				log -p d -t Camera "CameraTest take picture($picture_name) ---"
				exit
			fi
			sleep 0.2
		done
		echo "0"
		log -p e -t Camera "CameraTest take picture failed"
	;;

	"6")
	    log -p d -t Camera "CameraTest calibration +++"
		calibration $2
		log -p d -t Camera "CameraTest calibration ---"

	;;

	"7")
        log -p d -t Camera "CameraTest get_golden_data +++"
		get_golden_data $2
        log -p d -t Camera "CameraTest get_golden_data ---"
	;;

	"9")
		# echo "Preparing to auto focus & take picture...!"
        log -p d -t Camera "CameraTest flash auto focus & take picture +++"
    	#echo $2 > /data/.tmp/ATD_FILE
    	rm -rf $DATA_PATH$2".jpg" 2> /dev/null
    	echo 0 > /data/.tmp/ATD_PICTURE
		echo 0 > /data/.tmp/ATD_INFINITY
		echo 0 > /data/.tmp/ATD_FILE
		#date '+%M:%S'
		setkeycode 24
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			#if [ "$INDEX % 41" -eq "0" ]; then
			#	setkeycode 24
			#	echo 0 > /data/.tmp/ATD_PICTURE
			#	echo 0 > /data/.tmp/ATD_FILE
			#	sleep 0.2
			#fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
                while [ ! -s $DATA_PATH$2".jpg" ];
                do
					picture_name=`cat /data/.tmp/ATD_FILE 2> /dev/null`
					mv $DATA_PATH$picture_name".jpg" $DATA_PATH$2".jpg"  2> /dev/null
                done
				#echo "Picture taken success!!"
				echo "1"
				log -p d -t Camera "CameraTest flash auto focus & take picture($picture_name) ---"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		#echo "Picture taken failed!!"
		log -p e -t Camera "CameraTest flash auto focus & take picture failed"
		echo "0"
	;;

	"10")
		# echo "Take picture...!"
		log -p d -t Camera "CameraTest flash take picture +++"
    	#echo $2 > /data/.tmp/ATD_FILE
    	rm -rf $DATA_PATH$2".jpg" 2> /dev/null
    	echo 0 > /data/.tmp/ATD_PICTURE
    	echo 0 > /data/.tmp/ATD_FILE
		
		# sh /system/bin/input keyevent 80
		# sleep 2
		#date '+%M:%S'
		setkeycode 25
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			#if [ "$INDEX % 41" -eq "0" ]; then
			#	setkeycode 25
			#	echo 0 > /data/.tmp/ATD_PICTURE
			#	echo 0 > /data/.tmp/ATD_FILE
			#	sleep 0.2
			#fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
                while [ ! -s $DATA_PATH$2".jpg" ];
                do
					picture_name=`cat /data/.tmp/ATD_FILE 2> /dev/null`
					mv $DATA_PATH$picture_name".jpg" $DATA_PATH$2".jpg"  2> /dev/null
                done
				#echo "Picture taken success!!"
				echo "1"
				log -p d -t Camera "CameraTest flash take picture($picture_name) ---"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		#echo "Picture taken failed!!"
		log -p e -t Camera "CameraTest flash take picture failed"
		echo "0"
	;;

	"11")
        log -p d -t Camera "CameraTest af_calibration +++"
		af_calibration $2 $3 $4
        log -p d -t Camera "CameraTest af_calibration ---"
	;;

	"12")
        log -p d -t Camera "CameraTest set exposure time +++"
        setprop debug.asus.cameratest.param1 $3
		setkeycode 137
		sleep 0.5
		echo "1"
        log -p d -t Camera "CameraTest set exposure time ---"
	;;

	"13")
        log -p d -t Camera "CameraTest set iso +++"
        setprop debug.asus.cameratest.param2 $3
		setkeycode 138
		sleep 0.5
		echo "1"
        log -p d -t Camera "CameraTest set iso ---"
	;;

	*)
		echo "Invalid argument!!(par1 : commandID = $1)"
	;;
esac

exit 0
